[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "liturgist"
version = "2.0.0"
description = "A liturgical document generator"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Justin", email = "justin@jzbrooks.com"}
]
maintainers = [
    {name = "Justin", email = "justin@jzbrooks.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Religion",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Religion",
    "Topic :: Text Processing :: Markup :: HTML",
]
keywords = ["liturgy", "document", "generator", "pdf", "handlebars", "template"]
requires-python = ">=3.9"
dependencies = [
    "pandas>=2.0.0",
    "pybars3>=0.9.7",
    "weasyprint>=66.0",
    "pypandoc-binary>=1.14",
    "openpyxl>=3.1.0",
    "odfpy>=1.4.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.urls]
"Homepage" = "https://github.com/Trinity-Reformed-Church-GA/Liturgist"
"Bug Reports" = "https://github.com/Trinity-Reformed-Church-GA/Liturgist/issues"
"Source" = "https://github.com/Trinity-Reformed-Church-GA/Liturgist"

[project.scripts]
liturgist = "liturgist.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/liturgist"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml",
]

# Black formatting configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded by ^/ will apply only to files and directories
# in the root of the project.
^/build/
^/dist/
'''

# Ruff linting configuration
[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]

[tool.coverage.run]
source = ["src/liturgist"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
